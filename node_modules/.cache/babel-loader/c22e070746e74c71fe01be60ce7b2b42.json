{"ast":null,"code":"import _slicedToArray from \"/Users/mac/Desktop/React Projects/project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Desktop/React Projects/project/src/components/Appointment/Form.js\";\nimport React, { useState } from \"react\";\nimport Button from \"components/Button\";\nimport InterviewerList from \"components/InterviewerList\";\nexport default function Form(props) {\n  const _useState = useState(props.interviewer || null),\n        _useState2 = _slicedToArray(_useState, 2),\n        interviewer = _useState2[0],\n        setInterviewer = _useState2[1];\n\n  const _useState3 = useState(props.name || \"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        name = _useState4[0],\n        setName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        error = _useState6[0],\n        setError = _useState6[1];\n\n  const reset = function () {\n    setName(\"\");\n    setInterviewer(null);\n  };\n\n  const cancel = function () {\n    reset();\n    props.onCancel();\n  }; //to validate that the name input cannot be empty\n\n\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"appointment__card appointment__card--create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: event => event.preventDefault(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"appointment__create-input text--semi-bold\" // name=\"name\"\n    ,\n    name: props.name,\n    type: \"text\",\n    placeholder: \"Enter Student Name\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    \"data-testid\": \"student-name-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__validation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, error)), /*#__PURE__*/React.createElement(InterviewerList, {\n    interviewers: props.interviewers,\n    interviewer: interviewer,\n    onChange: setInterviewer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__card-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"appointment__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    danger: true,\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    confirm: true,\n    onClick: event => validate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Save\"))));\n}","map":{"version":3,"sources":["/Users/mac/Desktop/React Projects/project/src/components/Appointment/Form.js"],"names":["React","useState","Button","InterviewerList","Form","props","interviewer","setInterviewer","name","setName","error","setError","reset","cancel","onCancel","validate","onSave","event","preventDefault","target","value","interviewers"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,oBACGJ,QAAQ,CAACI,KAAK,CAACC,WAAN,IAAqB,IAAtB,CADX;AAAA;AAAA,QAC3BA,WAD2B;AAAA,QACdC,cADc;;AAAA,qBAEVN,QAAQ,CAACI,KAAK,CAACG,IAAN,IAAc,EAAf,CAFE;AAAA;AAAA,QAE3BA,IAF2B;AAAA,QAErBC,OAFqB;;AAAA,qBAGRR,QAAQ,CAAC,EAAD,CAHA;AAAA;AAAA,QAG3BS,KAH2B;AAAA,QAGpBC,QAHoB;;AAKlC,QAAMC,KAAK,GAAG,YAAU;AACtBH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAIA,QAAMM,MAAM,GAAG,YAAU;AACvBD,IAAAA,KAAK;AACLP,IAAAA,KAAK,CAACS,QAAN;AACD,GAHD,CATkC,CAclC;;;AACA,WAASC,QAAT,GAAoB;AAClB,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACfG,MAAAA,QAAQ,CAAC,8BAAD,CAAR;AACA;AACD;;AACDA,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAN,IAAAA,KAAK,CAACW,MAAN,CAAaR,IAAb,EAAmBF,WAAnB;AACD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,6CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,YAAY,EAAC,KAAnB;AAAyB,IAAA,QAAQ,EAAEW,KAAK,IAAIA,KAAK,CAACC,cAAN,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,2CADV,CAEA;AAFA;AAGA,IAAA,IAAI,EAAEb,KAAK,CAACG,IAHZ;AAIA,IAAA,IAAI,EAAC,MAJL;AAKA,IAAA,WAAW,EAAC,oBALZ;AAMA,IAAA,KAAK,EAAEA,IANP;AAOA,IAAA,QAAQ,EAAGS,KAAD,IAAWR,OAAO,CAACQ,KAAK,CAACE,MAAN,CAAaC,KAAd,CAP5B;AAQA,mBAAY,oBARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAWA;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8CV,KAA9C,CAXA,CADF,eAcE,oBAAC,eAAD;AAAiB,IAAA,YAAY,EAAEL,KAAK,CAACgB,YAArC;AAAmD,IAAA,WAAW,EAAEf,WAAhE;AAA6E,IAAA,QAAQ,EAAEC,cAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF,eAiBI;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAS,IAAA,SAAS,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,OAAO,EAAEM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,OAAO,EAAEI,KAAK,IAAIF,QAAQ,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CADF,CAjBJ,CADF;AA0BD","sourcesContent":["import React, {useState} from \"react\";\nimport Button from \"components/Button\";\nimport InterviewerList from \"components/InterviewerList\"\n\nexport default function Form(props) {\n  const [interviewer, setInterviewer]= useState(props.interviewer || null);\n  const [name, setName] = useState(props.name || \"\");\n  const [error, setError] = useState(\"\");\n  \n  const reset = function(){\n    setName(\"\");\n    setInterviewer(null);\n  }\n  const cancel = function(){\n    reset();\n    props.onCancel();\n  }\n\n  //to validate that the name input cannot be empty\n  function validate() {\n    if (name === \"\") {\n      setError(\"Student name cannot be blank\");\n      return;\n    }\n    setError(\"\");\n    props.onSave(name, interviewer);\n  }\n  \n  return(\n    <main className=\"appointment__card appointment__card--create\">\n      <section className=\"appointment__card-left\">\n        <form autoComplete=\"off\" onSubmit={event => event.preventDefault()}>\n          <input\n          className=\"appointment__create-input text--semi-bold\"\n          // name=\"name\"\n          name={props.name}\n          type=\"text\"\n          placeholder=\"Enter Student Name\"\n          value={name}\n          onChange={(event) => setName(event.target.value)}\n          data-testid=\"student-name-input\"\n         />\n        <section className=\"appointment__validation\">{error}</section>\n        </form>\n        <InterviewerList interviewers={props.interviewers} interviewer={interviewer} onChange={setInterviewer} />\n        </section>\n        <section className=\"appointment__card-right\">\n          <section className=\"appointment__actions\">\n            <Button danger onClick={cancel}>Cancel</Button>\n            <Button confirm onClick={event => validate()} >Save</Button>\n          </section>\n        </section>\n    </main> \n  );\n}\n"]},"metadata":{},"sourceType":"module"}